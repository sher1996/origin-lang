name: Build Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 0.30.0)'
        required: true
        default: '0.30.0'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller>=5.0 requests>=2.32.0 pip-licenses pillow>=10.0.0
          
      - name: Build Windows executable
        run: |
          python -m src.cli package --platform win --version ${{ github.event.inputs.version || github.ref_name }}
          
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: origin-win-${{ github.event.inputs.version || github.ref_name }}
          path: dist/origin-win-*.zip
          
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller>=5.0 requests>=2.32.0 pip-licenses pillow>=10.0.0
          
      - name: Build macOS executable
        run: |
          python -m src.cli package --platform mac --version ${{ github.event.inputs.version || github.ref_name }}
          
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: origin-mac-${{ github.event.inputs.version || github.ref_name }}
          path: dist/origin-mac-*.zip
          
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller>=5.0 requests>=2.32.0 pip-licenses pillow>=10.0.0
          
      - name: Build Linux executable
        run: |
          python -m src.cli package --platform linux --version ${{ github.event.inputs.version || github.ref_name }}
          
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: origin-linux-${{ github.event.inputs.version || github.ref_name }}
          path: dist/origin-linux-*.zip
          
  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/origin-win-${{ github.ref_name }}/origin-win-${{ github.ref_name }}.zip
          asset_name: origin-win-${{ github.ref_name }}.zip
          asset_content_type: application/zip
          
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/origin-mac-${{ github.ref_name }}/origin-mac-${{ github.ref_name }}.zip
          asset_name: origin-mac-${{ github.ref_name }}.zip
          asset_content_type: application/zip
          
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/origin-linux-${{ github.ref_name }}/origin-linux-${{ github.ref_name }}.zip
          asset_name: origin-linux-${{ github.ref_name }}.zip
          asset_content_type: application/zip
          
      - name: Generate update manifest
        run: |
          python scripts/gen_update_manifest.py --version ${{ github.ref_name }} --output releases/update.json
          echo "Update manifest generated (not committed to avoid git issues)" 